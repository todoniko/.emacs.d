#+TITLE: Emacs Configuration

* Base Editor
** Usex eXperience
[[http://ergoemacs.org/emacs/emacs_buffer_management.html][ibuffer]]
#+BEGIN_SRC emacs-lisp
(blink-cursor-mode -1)
(when (window-system) (set-frame-font "Source Code Pro-10"))

(defalias 'yes-or-no-p 'y-or-n-p)
(defalias 'list-buffers 'ibuffer)

;; Auto refresh buffers
(global-auto-revert-mode 1)
(add-hook 'dired-mode-hook 'auto-revert-mode)

(setq global-auto-revert-non-file-buffers t ;; Also auto refresh dired
      auto-revert-verbose nil               ;; but be quiet about it
      visible-bell t                        ;; silence is key
      line-move-visual nil
      create-lockfiles nil)

(delete-selection-mode t)
(show-paren-mode t)
;;(load-theme 'gruvbox-dark-soft t)
(load-theme 'zenburn t)
 #+END_SRC

** Backup
 #+BEGIN_SRC emacs-lisp
 (setq backup-directory-alist `(("." . "~/.emacs.d/backup"))
       backup-by-copying t
       delete-old-versions t
       kept-new-versions 6
       kept-old-versions 2
       version-control t)

 #+END_SRC

* Navigation
#+BEGIN_SRC emacs-lisp
(use-package ivy
  :ensure t
;;  :diminish (ivy-mode . "")
  :bind
  (:map ivy-mode-map
   ("C-'" . ivy-avy))
  :config
  (ivy-mode 1)
  ;; add ‘recentf-mode’ and bookmarks to ‘ivy-switch-buffer’.
  (setq ivy-use-virtual-buffers t)
  ;; number of result lines to display
  (setq ivy-height 10)
  ;; Show candidate index and total count
  (setq ivy-count-format "(%d/%d) ")
  ;; no regexp by default
  (setq ivy-initial-inputs-alist nil)
  ;; configure regexp engine.
  (setq ivy-re-builders-alist
	;; allow input not in order
        '((t   . ivy--regex-ignore-order))))

(use-package avy 
  :ensure t
  :custom
  (avy-keys '(?e ?s ?a ?t ?o ?u ?n ?i ?c))
  (avy-style 'pre))

(use-package counsel
  :ensure t
  :bind (("M-x" . counsel-M-x)
         ("C-x C-r" . counsel-recentf)
         ("C-c h i" . counsel-imenu)
         ("C-h v" . counsel-describe-variable)
         ("C-h f" . counsel-describe-function)))

(use-package swiper
  :ensure t
  :bind (("C-c s" . swiper)))
#+END_SRC
* Key Bindings
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :diminish which-key-mode
  :custom (which-key-idle-delay 0.03)
  :config
  (which-key-mode))
#+END_SRC
* Source Control
#+BEGIN_SRC emacs-lisp
(use-package magit
  :ensure t
  :defer t
  :bind (("C-c g" . magit-status)
         ("C-c G" . magit-dispatch)
         ("C-c m l" . magit-log-buffer-file)
         ("C-c m b" . magit-blame))
  :config
  (setq magit-display-buffer-function 'magit-display-buffer-same-window-except-diff-v1)
  (setq magit-diff-refine-hunk t))
#+END_SRC
* Personal Information
#+BEGIN_SRC emacs-lisp
(setq user-full-name "todoniko" 
      user-mail-address "todoniko@gmail.com"
      custom-file (expand-file-name "custom.el" user-emacs-directory))

(load custom-file) ;; custom setting in separate file
#+END_SRC
